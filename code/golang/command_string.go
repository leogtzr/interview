// Code generated by "stringer -type=Command"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[exitCmd-0]
	_ = x[exitInterviewFile-1]
	_ = x[topicsCmd-2]
	_ = x[helpCmd-3]
	_ = x[useCmd-4]
	_ = x[clearScreenCommand-5]
	_ = x[pwdCommand-6]
	_ = x[noCmd-7]
	_ = x[startCmd-8]
	_ = x[printCmd-9]
	_ = x[nextQuestionCmd-10]
	_ = x[previousQuestionCmd-11]
	_ = x[viewCmd-12]
	_ = x[rightAnswerCmd-13]
	_ = x[wrongAnswerCmd-14]
	_ = x[mehAnswerCmd-15]
	_ = x[finishCmd-16]
	_ = x[loadCmd-17]
	_ = x[increaseLevelCmd-18]
	_ = x[decreaseLevelCmd-19]
	_ = x[ignoreLevelCmd-20]
}

const _Command_name = "exitCmdexitInterviewFiletopicsCmdhelpCmduseCmdclearScreenCommandpwdCommandnoCmdstartCmdprintCmdnextQuestionCmdpreviousQuestionCmdviewCmdrightAnswerCmdwrongAnswerCmdmehAnswerCmdfinishCmdloadCmdincreaseLevelCmddecreaseLevelCmdignoreLevelCmd"

var _Command_index = [...]uint8{0, 7, 24, 33, 40, 46, 64, 74, 79, 87, 95, 110, 129, 136, 150, 164, 176, 185, 192, 208, 224, 238}

func (i Command) String() string {
	if i < 0 || i >= Command(len(_Command_index)-1) {
		return "Command(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Command_name[_Command_index[i]:_Command_index[i+1]]
}
